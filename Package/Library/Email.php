<?phpnamespace Library;class Email{	public $config = array(		'charset'	=>	'UTF-8',		//邮件字符编码		'SMTPauth'	=>	true,		//开启认证		'Port'	=>	465,		//端口		'SMTPSecure' => 'ssl',	 	'Host'	=>	'smtp.qq.com',	//邮箱服务器		'Username'	=>	'2889870020@qq.com',		//发送人邮箱账户		'Password'	=>	'czyudruqjgwgdehh',	//发送人邮箱密码(邮箱授权码)		'AddReplyTo'	=>	array(			'url'=>'2889870020@qq.com',			'name'=>'聂元培',		),		//对方回复地址 对方回复姓名  对方回复框显示		'From'	=>	'2889870020@qq.com',	//发送人地址		'FromName'	=>	'name',		//发送人名称		/*		'charset'	=>	'UTF-8',		//邮件字符编码		'SMTPauth'	=>	true,		//开启认证		'Port'	=>	25,		//端口		'Host'	=>	'smtp.163.com',	//邮箱服务器		'Username'	=>	'anbangmg@163.com',		//发送人邮箱账户		'Password'	=>	'anbang365',	//发送人邮箱密码		'AddReplyTo'	=>	array(			'url'=>'anbangmg@163.com',			'name'=>'安帮官网',		),		//对方回复地址 对方回复姓名  对方回复框显示		'From'	=>	'anbangmg@163.com',	//发送人地址		'FromName'	=>	'发送人名称',		//发送人名称		*/	);	function __construct (){/*		if(setting('emailcharset')) $this->charset=setting('emailcharset');		if(setting('loginemail')) $this->SMTPauth=setting('loginemail');		if(setting('smtpport')) $this->Port=setting('smtpport');		if(setting('smtphost')) $this->Host=setting('smtphost');		if(setting('emailusername')) $this->Username=setting('emailusername');		if(setting('emailpassword')) $this->Password=setting('emailpassword');		if(setting('fromemail')) $this->From=setting('fromemail');		if(setting('emailname')) $this->Fromname=setting('emailname');		if(setting('replyemail')) $this->AddReplyTo['url']=setting('replyemail');		if(setting('replyname')) $this->AddReplyTo['name']=setting('replyname');*/		require(__DIR__.'/Email/class.phpmailer.php');		$this->PHPMailer = new \PHPMailer(true);	}	/**	 *		发送邮箱	 * 		$AddAddress='1305449323@qq.com';	//收件人地址			$title='title';	//邮件标题			$body='content';	//	邮件内容	 */	function send($value=null){		if(empty($value['email'])) return '缺少收件人地址';		if(empty($value['title'])) return '缺少邮件标题';		if(empty($value['body'])) return '缺少邮件内容';		try{			$config = $this->config;			$this->PHPMailer->IsSMTP();			$this->PHPMailer->CharSet	=	$config['charset'];		//设置邮件的字符编码			$this->PHPMailer->SMTPSecure = $config['SMTPSecure'];			$this->PHPMailer->SMTPAuth	=	$config['SMTPauth'];		//开启认证			$this->PHPMailer->Port	=	$config['Port'];			$this->PHPMailer->Host	=	$config['Host'];		//邮箱服务器地址			$this->PHPMailer->Username	=	$config['Username'];		//用于发送邮件的账号			$this->PHPMailer->Password	=	$config['Password'];		//发送邮箱的密码			$this->PHPMailer->AddReplyTo(				$config['AddReplyTo']['url'],				$config['AddReplyTo']['name']			);		//对方回复邮件的地址回复地址			$this->PHPMailer->From	=	$config['From'];		//发送人的地址			$this->PHPMailer->FromName	=	$config['FromName'];		//发送人的名字  显示在对方邮件列表邮件名字			$this->PHPMailer->AddAddress($value['email']);	//收件人地址			$this->PHPMailer->Subject	=	$value['title'];  //收件人邮箱显示标题			$this->PHPMailer->Body	=	$value['body'];	//发送邮件内容			//当邮件不支持html时备用显示，可以省略			//$this->PHPMailer->AltBody	=	"To view the message, please use an HTML compatible email viewer!";			//$this->PHPMailer->WordWrap = 80;	//设置每行字符串的长度			//$mail->AddAttachment("f:/test.png"); //可以添加附件			$this->PHPMailer->IsHTML(true);			$this->PHPMailer->Send();			return 'success';		} catch (phpmailerException $e) {			return "邮件发送失败：".$e->errorMessage();		}	}}