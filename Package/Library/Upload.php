<?phpnamespace Library;class Upload{	private $filepath;  //指定上传文件保存路径	private $allowtype=array('gif','jpg','png','jpeg');//允许上传类型	private $maxsize=1000000;//允许上传最大值 Kb	private $isranname=true;//是否随机重命名	private $originName;//上传源文件名	private $tmpFileName;//临时文件名	private $fileType;//文件类型	private $fileSize;//文件类型	private $newFileName;//新文件名	private $errorNum=0;//错误号	private $errorMess="";//提供错误报告	public $info;	//用于对上传文件初始化	//1.指定上传路径    2.允许类型  3.限制大小  4.文件名是否随机	//让用户可以不按位置传参，后面参数给值不用将前几个参数也提供值	function __construct($options=array()){		foreach($options as $key=>$val){			//让用户传的属性不论大小写都可以赋值			$key=strtolower($key);			//判断用户参数中数组的下标是否和成员属性名相同			if(!in_array($key,get_class_vars(get_class($this)))){				continue;			}			$this->setOption($key,$val);		}	}	private function setOption($key,$val){		$this->$key=$val;	}	//用来检查文件上传路径	private function checkFilePath(){		if(empty($this->filepath)){			$this->setOption('errorNum',-5);			return false;		}		if(!file_exists($this->filepath) || !is_writable($this->filepath)){			if(!mkdir($this->filepath,0755)){				$this->setOption('errorNum',-4);			}		}		return true;	}	//用于检查文件上传类型	private function checkFileType(){		if(is_string($this->allowtype)) $this->allowtype = explode(',',$this->allowtype);		if(in_array(strtolower($this->fileType),$this->allowtype)){			return true;		}else{			$this->setOption('errorNum',-1);			return false;		}	}	//用来检查文件上传的大小	private function checkFileSize(){		if($this->fileSize > $this->maxsize*1024){			$this->setOption('errorNum',-2);			return false;		}else{			return true;		}	}	//设置上传后的文件名称	private function setNewFileName(){		if($this->isranname){			$this->setOption('newFileName',$this->proRandName());		}else{			$this->setOption('newFileName',$this->originName);		}	}	//设置随机文件名	private function proRandName(){		$filename=date("YmdHis").rand(100,999);		return $filename.'.'.$this->fileType;	}	//用于上传文件	function start($fileField,$config = null){		if(!empty($config)) $this->__construct($config);		$return=true;		//检查文件上传路径		if(!$this->checkFilePath()){			$this->errorMess=$this->getError();			return false;		}		$name=$_FILES[$fileField]['name'];		$tmp_name=$_FILES[$fileField]['tmp_name'];		$size=$_FILES[$fileField]['size'];		$error=$_FILES[$fileField]['error'];		if($this->setFiles($name,$tmp_name,$size,$error)){			if($this->checkFileSize() && $this->checkFileType()){				$this->setNewFileName();				if($this->copyFile()){					$info['savename']=$this->newFileName;					$info['savedir']=$this->filepath;					$info['savepath']=ltrim(rtrim($this->filepath,'/').'/'.$this->newFileName,'.');					$info['size']=$size;					$info['type']=$_FILES[$fileField]['type'];					$this->info=$info;				}else{					$return=false;				}			}else{				$return=false;			}		}else{			$return=false;		}		if(!$return){			$this->errorMess=$this->getError();		}		return $return;	}	//拷贝文件方法	private function copyFile(){		if(!$this->errorNum){			$filepath=rtrim($this->filepath,'/').'/';			$filepath.=$this->newFileName;			if(move_uploaded_file($this->tmpFileName,$filepath)){				return true;			}else{				$this->setOption('errorNum',-3);				return false;			}		}else{			return false;		}	}	//设置和$_FILES有关内容	private function setFiles($name="",$tmp_name='',$size=0,$error=0){		$this->setOption('errorNum',$error);		if($error){			return false;		}		$this->setOption('originName',$name);		$this->setOption('tmpFileName',$tmp_name);		$this->setOption('fileSize',$size);		//按点分割文件名		$arrStr=explode('.',$name);		//取出最后一个点后的字符   获取文件类型		$this->setOption('fileType',strtolower($arrStr[count($arrStr)-1]));		return true;	}	//用于获取上传后文件的文件名	function getNewFileName(){		return $this->newFileName;	}	//上传失败 则调用方法查看错误报告	function error(){		return $this->errorMess;	}	//错误消息	private function getError(){		$str="上传文件<font color=red>".$this->originName."</font>时出错：";		switch($this->errorNum){			case 4:				$str.="没有文件被上传";				break;			case 3:				$str.="文件只有部分上传";				break;			case 2:				$str.="上传文件超过了HTTP表单中MAX_FILE_SIZE指定的值";				break;			case 1:				$str.="上传文件超过了php.ini中upload_max_filesize选项的值";				break;			case -1:				$str.="未允许类型";				break;			case -2:				$str.="文件过大，上传文件大小不能超过".$this->maxsize."Kb";				break;			case -3:				$str.="上传失败";				break;			case -4:				$str.="建立存放上传文件目录失败，请重新指定长传目录";				break;			case -5:				$str.="必须指定上传文件的路径";				break;			default:				$str.="未知错误";		}		return $str.'<br>';	}}